{"version":3,"sources":["assets/logo-white.svg","components/Header.js","components/ImageSection.js","utilities/Errors.js","utilities/checkCallError.js","utilities/index.js","methods/RequestService.js","methods/tableItems.js","methods/index.js","methods/DataApi.js","components/Table.js","components/DropDown.js","components/SearchBox.js","components/InteractiveTable.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","ImageSection","data-aos","href","FailureByDesign","code","message","status","type","Error","checkCallError","call","ok","response","error","JSON","parse","e","includes","details","stringify","apiConfig","ApiConfig","process","REACT_APP_STAGE","env","RequestService","this","baseUrl","defaultOptions","method","headers","path","makeRequest","options","requestParams","fetch","result","json","dataApi","setChangeAppState","changeAppState","getTableData","filterParams","a","query","length","requestService","get","data","getFilterList","str","field","list","search","Table","props","updateStateItem","stateItem","value","setState","componentDidMount","loading","componentDidUpdate","prevProps","prevFilterParams","state","rows","columns","rowObjects","object","map","row","i","column","toLowerCase","push","tableRows","col","right","name","selector","sortable","wrap","grow","format","toString","replace","tableColumns","highlightOnHover","noHeader","paginationPerPage","pagination","Component","DropDown","selected","setSelected","callback","handleSelectChange","useCallback","label","labelInline","onChange","SearchBox","useState","selectedField","setSelectedField","selectedOptions","setSelectedOptions","inputValue","setInputValue","searchStr","setResult","placeholder","setPlaceholder","useEffect","getOptions","useAsyncHook","updateText","removeTag","tag","values","splice","indexOf","tagsMarkup","key","onRemove","textField","TextField","style","paddingRight","flexBasis","allowMultiple","onSelect","listTitle","InteractiveTable","id","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","WrappedApp","i18n","enTranslations","AOS","init","ReactDOM","render","document","getElementById","URL","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b1011ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.a0e5d9e9.svg\";","import React from 'react';\nimport logo from '../assets/logo-white.svg';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"shell\">\n      <div className=\"header__inner\">\n        {/* <a href=\"/\" className=\"logo\"> */}\n        <img src={logo} className=\"logo\" alt=\"Rexovas\" />\n        {/* </a> */}\n      </div>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport '../css/components/ImageSection.css';\n\nconst ImageSection = () => (\n  <section className=\"section-slider\" data-aos=\"fade-right\">\n    <div className=\"slider-image\">\n      <div className=\"shell\">\n\n        <h1 className=\"image-header\">Demo Application</h1>\n        <p className=\"image-text\">\n          This dataset presents the age-adjusted death rates for the 10 leading causes\n          of death in the United States beginning in 1999. Data are based on information\n          from all resident death certificates filed in the 50 states and the District of\n          Columbia using demographic and medical characteristics\n        </p>\n        {/* <a className=\"image-link\" href=\"https://catalog.data.gov/dataset/age-adjusted-death-rates-for-the-top-10-leading-causes-of-death-united-states-2013\">\n          Source: National Center for Health Statistics\n        </a> */}\n        <a className=\"btn btn--red\" href=\"https://catalog.data.gov/dataset/age-adjusted-death-rates-for-the-top-10-leading-causes-of-death-united-states-2013\">\n          Learn More\n        </a>\n      </div>\n    </div>\n  </section>\n);\n\nexport default ImageSection;\n","class FailureByDesign extends Error {\n  constructor(code, message, status) {\n    super(message);\n    this.type = 'FailureByDesign';\n    this.code = code;\n    this.message = message;\n    this.status = status;\n  }\n}\n\nexport default FailureByDesign;\n","import FailureByDesign from './Errors';\n\nconst checkCallError = (call) => {\n  if (!call.ok) {\n    let { response } = call;\n    let error = {};\n    if (response) {\n      try {\n        response = JSON.parse(response);\n      } catch (e) {} // eslint-disable-line no-empty\n      error = response.error; // eslint-disable-line prefer-destructuring\n    }\n    const standardErrors = [403, 404, 500];\n    if (standardErrors.includes(call.status)) {\n      throw new FailureByDesign(error.type, error.details, call.status);\n    }\n    // Catch-all for non 2XX http responses\n    throw new FailureByDesign(\n      'BAD_RESPONSE',\n      `Bad response from Data API. Status code: ${call.status} Response: ${JSON.stringify(call.response)}`,\n    );\n  }\n};\n\nexport default checkCallError;\n","import Errors from './Errors';\nimport ApiConfig from './ApiConfig.json';\nimport checkCallError from './checkCallError';\n\nconst env = () => {\n  switch (process.env.REACT_APP_STAGE) {\n    case 'production':\n      return 'production';\n    case 'localhost':\n      return 'localhost';\n    default:\n      return 'development';\n  }\n};\n\nconst apiConfig = ApiConfig[env()];\n\nexport { Errors, apiConfig, checkCallError };\n","import { checkCallError, apiConfig } from '../utilities';\n\nclass RequestService {\n  constructor() {\n    this.baseUrl = apiConfig;\n    this.defaultOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n  }\n\n  async get(path) {\n    return this.makeRequest(path);\n  }\n\n  async makeRequest(path, options) {\n    const requestParams = { ...this.defaultOptions, ...options };\n    const result = await fetch(`${this.baseUrl}${path}`, requestParams);\n    checkCallError(result);\n    return result.json();\n  }\n}\n\nexport default RequestService;\n\n// const requestOptions = (method, contentType, auth = null) => (\n//   {\n//     method,\n//     headers: {\n//       'Content-Type': contentType,\n//     },\n//   }\n// );\n\n// const makeRequest = async (path, options) => {\n//   const baseUrl = apiConfig;\n//   const call = await fetch(`${baseUrl}${path}`, options);\n//   checkCallError(call);\n//   return call.json();\n// };\n\n// const RequestService = {\n//   get: async (path, auth, contentType = 'application/json') => {\n//     const options = requestOptions('GET', contentType);\n//     return makeRequest(path, options);\n//   },\n// };\n\n// export default RequestService;\n","const tableRows = (data) => {\n  if (!data) {\n    return [];\n  }\n  const rows = data.data;\n  const { columns } = data;\n  const rowObjects = [];\n  let object = {};\n  rows.map((row) => { // eslint-disable-line array-callback-return\n    row.map((value, i) => { // eslint-disable-line array-callback-return\n      const column = columns[i].toLowerCase();\n      object[column] = value;\n    });\n    rowObjects.push(object);\n    object = {};\n  });\n\n  return rowObjects;\n};\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nconst tableColumns = (columns) => {\n  if (!columns) {\n    return [];\n  }\n  const headers = columns.map((column) => {\n    const col = column.toLowerCase();\n    const right = (col === 'deaths' || col === 'age-adjusted death rate');\n    const object = {\n      name: column,\n      selector: column.toLowerCase(),\n      sortable: true,\n      wrap: true,\n      right,\n      grow: () => {\n        if (col === '113 cause name') {\n          return 3;\n        }\n        return 1;\n      },\n      format: (row) => {\n        if (col === 'deaths') {\n          return numberWithCommas(row[col]);\n        }\n        return row[col];\n      },\n    };\n    return object;\n  });\n  return headers;\n};\n\n\nexport { tableRows, tableColumns };\n","import DataApi from './DataApi';\nimport { tableRows, tableColumns } from './tableItems';\n\nconst dataApi = new DataApi();\n\nexport { dataApi, tableRows, tableColumns };\n","import RequestService from './RequestService';\n\nexport default class DataApi {\n  constructor() {\n    this.requestService = new RequestService();\n    this.changeAppState = () => {};\n    this.search = null;\n  }\n\n  setChangeAppState = (changeAppState) => {\n    this.changeAppState = changeAppState;\n  };\n\n  getTableData = async (filterParams) => {\n    const query = (filterParams && filterParams.length !== 0) ? `?filter=${filterParams}` : '';\n    const data = await this.requestService.get(`/table-data${query}`);\n    return data;\n  }\n\n  getFilterList = async (str, field) => {\n    const query = str ? `?field=${field}&search=${str}` : `?field=${field}`;\n    const list = await this.requestService.get(`/filter-list${query}`);\n    return list;\n  }\n}\n","import React, { Component } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { dataApi, tableRows, tableColumns } from '../methods';\nimport '../css/components/Table.css';\nimport PropTypes from 'prop-types';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: null,\n    };\n  }\n\n  updateStateItem = (stateItem, value) => {\n    this.setState({ [stateItem]: value });\n  }\n\n  componentDidMount = async () => {\n    const data = await dataApi.getTableData();\n    this.setState({ data, loading: false });\n  }\n\n  componentDidUpdate = async (prevProps) => {\n    const { filterParams: prevFilterParams } = prevProps;\n    const { filterParams } = this.props;\n    if (filterParams !== prevFilterParams) {\n      this.updateStateItem('loading', true);\n      const data = await dataApi.getTableData(filterParams);\n      this.updateStateItem('data', data);\n      this.updateStateItem('loading', false);\n    }\n  }\n\n  render() {\n    const { loading, data } = this.state; // eslint-disable-line no-unused-vars\n\n    const rows = tableRows(data);\n    const columns = tableColumns(data ? data.columns : null);\n\n    // const customStyles = {\n    //   rows: {\n    //     style: {\n    //     },\n    //   },\n    // };\n\n    return (\n      <DataTable\n        className=\"table\"\n        highlightOnHover\n        noHeader\n        paginationPerPage={15}\n        pagination\n        columns={columns}\n        data={rows}\n        sortable\n        // customStyles={customStyles}\n      />\n    );\n  }\n}\n\nTable.propTypes = {\n  filterParams: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Table;\n","import React, { useCallback } from 'react';\nimport { Select } from '@shopify/polaris';\nimport PropTypes from 'prop-types';\n\nconst DropDown = (props) => {\n  const { selected, callback: setSelected } = props;\n\n  const handleSelectChange = useCallback((value) => setSelected(value), [setSelected]);\n\n  const options = [\n    { label: 'State', value: 'state' },\n    { label: 'Cause Name', value: 'causeName' },\n  ];\n\n  return (\n    <Select\n      label=\"Filter by\"\n      labelInline\n      options={options}\n      onChange={handleSelectChange}\n      value={selected}\n    />\n  );\n};\n\nDropDown.propTypes = {\n  selected: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n};\n\nexport default DropDown;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport '../css/components/SearchBox.css';\nimport '@shopify/polaris/styles.css';\nimport {\n  Autocomplete, Stack, Tag, TextContainer,\n} from '@shopify/polaris';\nimport { dataApi } from '../methods';\nimport Table from './Table';\nimport DropDown from './DropDown';\n\n\nconst useAsyncHook = (searchStr = '', field) => {\n  const [result, setResult] = useState([]);\n  const [placeholder, setPlaceholder] = useState('');\n\n\n  useEffect(() => {\n    async function getOptions() {\n      const data = await dataApi.getFilterList(searchStr, field);\n      setResult(data.result);\n\n      if (data.result && data.result.length > 2) {\n        setPlaceholder(data.result[2].label);\n      } else if (data.result && data.result.length === 1) {\n        setPlaceholder(data.result[0].label);\n      } else {\n        setPlaceholder('New York');\n      }\n    }\n\n    getOptions();\n  }, [searchStr, field]);\n\n  return [result, placeholder];\n};\n\nconst SearchBox = () => {\n  const [selectedField, setSelectedField] = useState('state'); // For Dropdown\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [options, placeholder] = useAsyncHook(inputValue, selectedField);\n\n  const updateText = useCallback(\n    (value) => {\n      setInputValue(value);\n    },\n    // [options], // eslint-disable-line\n    [],\n  );\n\n  const removeTag = useCallback(\n    (tag) => () => {\n      const values = [...selectedOptions];\n      values.splice(values.indexOf(tag), 1);\n      setSelectedOptions(values);\n    },\n    [selectedOptions],\n  );\n\n  const tagsMarkup = selectedOptions.map((value) => (\n    <Tag key={value} onRemove={removeTag(value)}>\n      {value}\n    </Tag>\n  ));\n\n  const textField = (\n    <Autocomplete.TextField\n      onChange={updateText}\n      value={inputValue}\n      placeholder={`e.g. ${placeholder}`}\n    />\n  );\n\n  const className = tagsMarkup.length === 0 ? 'search-box' : 'search-box-tags';\n\n  return (\n    <div className=\"search-table-wrapper shadow\">\n      {tagsMarkup.length !== 0\n          && (\n          <div className=\"tags\">\n            <TextContainer>\n              <Stack>{tagsMarkup}</Stack>\n            </TextContainer>\n            {/* <br /> */}\n          </div>\n          )}\n      <div className={className}>\n        <div style={{ paddingRight: '2px' }}>\n          <DropDown selected={selectedField} callback={setSelectedField} />\n        </div>\n        <div style={{ flexBasis: '50vh' }}>\n          <Autocomplete\n            allowMultiple\n            options={options}\n            selected={selectedOptions}\n            textField={textField}\n            onSelect={setSelectedOptions}\n            listTitle=\"Search Suggestions\"\n          />\n        </div>\n      </div>\n      <div className=\"table-wrapper\">\n        <Table filterParams={selectedOptions} />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport '../css/components/InteractiveTable.css';\nimport SearchBox from './SearchBox';\n\nconst InteractiveTable = () => (\n  <div>\n    {/* <section className=\"section-title\" data-aos=\"fade-left\" id=\"section-1\"> */}\n    <section className=\"section-title\" id=\"section-1\" data-aos=\"fade-left\">\n      <div className=\"shell\">\n        <div className=\"section__head\">\n          <h3>Age-Adjusted Death Rates for the Top 10 Leading Causes of Death in the US</h3>\n        </div>\n\n        {/* <div style={{ display: 'flex', backgroundColor: '#003d71' }}> */}\n\n          <SearchBox />\n\n        {/* </div> */}\n      </div>\n    </section>\n  </div>\n);\n\n\nexport default InteractiveTable;\n","import React from 'react';\nimport './css/App.css';\nimport {\n  Header, ImageSection, InteractiveTable,\n} from './components';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"wrapper__inner\">\n        <Header />\n        <div className=\"container\">\n          <ImageSection />\n          <InteractiveTable />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport AOS from 'aos';\nimport { AppProvider } from '@shopify/polaris';\nimport enTranslations from '@shopify/polaris/locales/en.json';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'aos/dist/aos.css';\n\nAOS.init();\n\nfunction WrappedApp() {\n  return (\n    <AppProvider i18n={enTranslations}>\n      <App />\n    </AppProvider>\n  );\n}\n\nReactDOM.render(<WrappedApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}